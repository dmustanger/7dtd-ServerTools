using System.IO;
using System.Text;

namespace ServerTools
{
    class HowToSetup
    {
        private const string file = "HowToSetup.txt";
        private static string filePath = string.Format("{0}/{1}", API.ConfigPath, file);

        public static void Load()
        {
            using (StreamWriter sw = new StreamWriter(filePath, false, Encoding.UTF8))
            {
                sw.WriteLine("ServerTools - How to setup ServerTools");
                sw.WriteLine(string.Format("This was drafted for version {0}", Config.Version));
                sw.WriteLine();
                sw.WriteLine("The noted above version is automatic and may not reflect the state of this file.");
                sw.WriteLine();
                sw.WriteLine("ServerTools was coded and tested under a Windows operating system. If you find bugs, report them to");
                sw.WriteLine("https://github.com/dmustanger/7dtd-ServerTools/issues");
                sw.WriteLine();
                sw.WriteLine("This version is compatible with 7 Days to Die: Alpha 19");
                sw.WriteLine();
                sw.WriteLine("Open the ServerToolsConfig.xml found in the servertools folder inside your dedicated server installation directory. You will need to enable and set each tools options to match your server preferences.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_Chat_Commands\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Adminstrators can use chat to send administrators a ingame chat message. Type @admins (message) to use. Only online administrators will receive the message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Admin_List\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Mod_Level");
                sw.WriteLine();
                sw.WriteLine("Type /admins or !admins in chat to get a response showing the currently online administrators and moderators based on the ServerAdmin.xml. Setting Admin_Level to 2 would show all online administrators");
                sw.WriteLine("tier 0-2 as admin in the chat response. Setting Mod_Level to 6 would show all online moderators tier 3 through 6 as mods in the chat response.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Animal_Tracking\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Minimum_Spawn_Radius");
                sw.WriteLine("Set a numeric value for Maximum_Spawn_Radius");
                sw.WriteLine("Set a numeric values for EntityId");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Type /animaltracking or /track  in chat to get a animal to spawn with in the radius set.");
                sw.WriteLine("Set the animal id based on the entity id list found in game. Type spawnentity or se in console to view them. Choose any id you wish.");
                sw.WriteLine("The delay is the time that must pass before the command can be used again. The delay is in minutes.");
                sw.WriteLine("Players will receive an in game message saying they have tracked down an animal to with in the radius it spawned at.");
                sw.WriteLine("Experiment with the radius to find one that suits your preference.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auction\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for No_Admins");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Total_Items");
                sw.WriteLine("Set a numeric value for Tax");
                sw.WriteLine();
                sw.WriteLine("Players can sell items by putting it into the first slot of a secure chest they own and typing /auction sell #. The number is how much the price is.");
                sw.WriteLine("Typing /auction shows available items in the auction. /auction buy # will attempt to purchase the corresponding item # from the auction.");
                sw.WriteLine("Profits are sent to the sellers wallet.");
                sw.WriteLine("A player can cancel their auction by typing /auction cancel but it must have been longer than the cancel time.");
                sw.WriteLine("Total_Items controls how many items they may have in the auction");
                sw.WriteLine("Tax controls the perfect removed from sale for taxes");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Backup\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Time_Between_Saves");
                sw.WriteLine("Set your desired save folder location for Destination");
                sw.WriteLine("Set a numeric value for Compression_Level");
                sw.WriteLine("Set a numeric value for Backup_Count");
                sw.WriteLine();
                sw.WriteLine("An automatic backup of the world files will be created in a zip file.");
                sw.WriteLine("Time_Between_Saves controls how many minutes will pass between backups.");
                sw.WriteLine("You can allow the default location or specify a save directory you would like your backups to go with Destination.");
                sw.WriteLine("Be careful to put the entire location if inputing a custom one. Example C:/MyFiles/7DaysBackups/");
                sw.WriteLine("Set the compression level to 0, 1 or 2. 0 is none, 1 is optimal, 2 is maximum");
                sw.WriteLine("Backup_Count controls how many backups it will keep in total.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Auto_Save_World\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically begins a timer on world start that will start a world save every time the Delay_Between_Saves expires.");
                sw.WriteLine("This timer and save process will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bad_Word_Filter\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Invalid_Name");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a BadWords.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Filters out bad words or symbols from chat matching the list in BadWords.xml");
                sw.WriteLine("Enabling Invalid_Name will block users from using chat if their name contains a word or symbol from the BadWords.xml");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bank\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Claim");
                sw.WriteLine("Set your game coin name such as casinoCoin for Ingame_Coin. If you have a custom mod or coin type, put the exact name as seen in the xml file.");
                sw.WriteLine("Set a numeric value for Deposit_Fee_Percent");
                sw.WriteLine("Set True or False for Player_Transfers");
                sw.WriteLine();
                sw.WriteLine("Inside_Claim controls whether players must be inside their own claim to use the bank commands");
                sw.WriteLine("Set your in game coin name found in your default Items.xml for Ingame_Coin. This is not your wallet coin name which can be any name you choose.");
                sw.WriteLine("Deposit_Fee controls how much is withdrawn from a deposit to the bank. Withdraw has no fee. Set 0 for none.");
                sw.WriteLine("Players can type /bank to see their bank value.");
                sw.WriteLine("Place casinoCoin into a secure chest and type /bank deposit # to withdraw the amount a player wants from the box and place it in their bank account.");
                sw.WriteLine("/wallet deposit # deposits wallet coins to the bank.");
                sw.WriteLine("/withdraw # removes the amount the player wants from the bank and places the value into the player's bag as the Ingame_Coin type.");
                sw.WriteLine("/wallet withdraw # removes the value from the bank and places it in their wallet.");
                sw.WriteLine("Turn on and off player transfer to allow players to transfer between bank accounts.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Block_Logger\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs the placement of all blocks in the world, by whom and where");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bloodmoon\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine("Set True or False for Auto_Show");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Displays the amount of days before the next bloodmoon in chat.");
                sw.WriteLine("Typing /bloodmoon in chat will respond with the remaining days until the next bloodmoon.");
                sw.WriteLine("If the tool is on, it will always display upon entry to the server.");
                sw.WriteLine("Setting Show_On_Respawn will display the remaining days to a player that has died and respawn.");
                sw.WriteLine("Auto_Show will enable it to display periodically in chat while playing.");
                sw.WriteLine("Delay is the time between chat reminders based if Auto_Show is enabled. Time is in minutes");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bloodmoon_Warrior\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Zombie_Kills");
                sw.WriteLine("Set a numeric value for Chance");
                sw.WriteLine("Set True or False for Reduce_Death_Count");
                sw.WriteLine();
                sw.WriteLine("Players online during the start of the bloodmoon may randomly be invited to an event.");
                sw.WriteLine("They must survive the entire bloodmoon, can not die and must kill enough zombies.");
                sw.WriteLine("Set home many zombies they must kill to succeed.");
                sw.WriteLine("Created an xml file called BloodmoonWarrior.xml.");
                sw.WriteLine("Set the potential items players can be rewarded by adding or removing them from BloodmoonWarrior.xml.");
                sw.WriteLine("If Reduce_Death_Count is set to true, their death count will reduce by one if successful. They will always receive one item from the list.");
                sw.WriteLine("Players can not log out or disconnect during the event or they will fail. There is no penalty for failure.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Bounties\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Minimum_Bounty");
                sw.WriteLine("Set a numeric value for Kill_Streak");
                sw.WriteLine("Set a numeric value for Bonus");
                sw.WriteLine();
                sw.WriteLine("Players can see the online players and their id by using /bounty. It also shows the current bounty on each player.");
                sw.WriteLine("The cost of the bounty is based on what the player inputs in chat and is available in their wallet.");
                sw.WriteLine("Players are awarded the bounty value upon killing the target and a chat message is shown.");
                sw.WriteLine("If a player goes over the Kill_Streak by killing enough players without dying, they automatically receive the bounty value to their value on each kill.");
                sw.WriteLine("If a player is on a kill streak and another player kills them, the killer will receive this bonus value to their wallet.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Break_Reminder\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Break_Time");
                sw.WriteLine("Set your desired message sent to players");
                sw.WriteLine();
                sw.WriteLine("Players will be reminded every set amount of minutes to take a break.");
                sw.WriteLine("Break_Time is in minutes.");
                sw.WriteLine("Break_Message controls your desired message players receive upon reaching the specified break time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Color_Prefix\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ChatColorPrefix.xml file. In the xml, players can be listed by steam id and a group with prefix and color.");
                sw.WriteLine("The colors must be entered as an HTML color. Example:[FF0000]");
                sw.WriteLine("Expiration date controls when their prefix and color will stop working.");
                sw.WriteLine("Console commands are available and will add the player to the xml list. Add them as a new entry if the group does not already exist.");
                sw.WriteLine("If the group does exist, you can use the already created groups prefix and color. Set a new a expiration date optionally.");
                sw.WriteLine("Optionally, players can be added via console with the donor commands which adds them to this and the reserved slots list at the same time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Log\" Enable =\"False\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs all chat commands to an external file. Example /gimme.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Response\" />");
                sw.WriteLine();
                sw.WriteLine("Set a server response name to Chat_Command_Response");
                sw.WriteLine("Set a color using a html value in brackets for Main_Color");
                sw.WriteLine("Set a symbol ServerTools will use for chat based commands");
                sw.WriteLine("Set a symbol ServerTools will use for chat based commands");
                sw.WriteLine();
                sw.WriteLine("Set a server response name to chat commands and server responses from servertools");
                sw.WriteLine("The color all general response messages will display as in chat.");
                sw.WriteLine("Chat_Command_Prefix is the symbol used as a prefix to chat based commands.");
                sw.WriteLine("Chat_Command_Prefix2 is the symbol used as a prefix to chat based commands.");
                sw.WriteLine("*Note* Do not use @ or \\ for a command prefix.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Command_Response_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set a color using a html value in brackets for Friend_Chat_Color");
                sw.WriteLine("Set a color using a html value in brackets for Party_Chat_Color");
                sw.WriteLine("Set True or False for Passthrough");
                sw.WriteLine();
                sw.WriteLine("The color that all friend chat will show as for their name and prefix.");
                sw.WriteLine("The color that all party chat will show as for their name and prefix.");
                sw.WriteLine("Passthrough controls whether unrecognized commands will pass through the chat for other mods and managers to use.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Flood_Protection\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Length");
                sw.WriteLine("Set a numeric value for Messages_Per_Min");
                sw.WriteLine("Set a numeric value for Wait_Time");
                sw.WriteLine();
                sw.WriteLine("Protect the chat from being flooded from a player's chat spam.");
                sw.WriteLine("Set the maximum amount of characters that can be in a single chat message.");
                sw.WriteLine("Set the maximum amount of message a player can send in a single minute.");
                sw.WriteLine("Set the time a player must wait if they reach the max count per minute. Time is in seconds.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Chat_Logger\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Logs all chat to a external file.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Clan_Manager\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a color using a html value in brackets for Private_Chat_Color");
                sw.WriteLine();
                sw.WriteLine("Enables the clan manager. Players can control it via chat.");
                sw.WriteLine("Clan commands are shown in chat based on their availability by typing /clancommands");
                sw.WriteLine("Players can create and manage a clan with these various commands.");
                sw.WriteLine("If a player sends a clan chat, it will use the Private_Chat_Color.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Country_Ban\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Add what countries you do not want to allow to join the server seperated with a comma");
                sw.WriteLine("You must specify the country using the 2 digit iso code. You can get the 2 digit iso code here at countrycode.org");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Credentials\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for No_Family_Share");
                sw.WriteLine("Set True or False for No_Bad_Id");
                sw.WriteLine("Set True or False for No_Internal");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("No family share will stop players from joining your server if their id do not match between steamId and ownerId. Many hackers use this to prevent their main accounts");
                sw.WriteLine("from being banned.");
                sw.WriteLine("No_Bad_Id checks for steam Id and owner Id to be 17 numbers in length and to start with 7656119 as all steam id are like this.");
                sw.WriteLine("No_Internal checks for an ip that is an internal address such as 192.168.*.* . This is commonly done to prevent their own ip from getting banned. It will kick");
                sw.WriteLine("an administrator or server owner if they are playing on a server they are networked to.");
                sw.WriteLine("Admins will be skipped if they are the right permission level.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Custom_Commands\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Custom_Commands.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Allows custom commands to be used via chat. Example: The player can type /market and it runs \"tele {SteamId} 0 -1 5\" based on the response the admin has setup.");
                sw.WriteLine("Separate command response with a ^. Example: tele {EntityId} 10 -1 50 ^ whisper You are now in the market.");
                sw.WriteLine("A delay in the operation of the response can be done with {Delay} #. Example: tele {EntityId} 10 -1 50 ^ {Delay} 3 ^ whisper {PlayerName} you are now in the market.");
                sw.WriteLine("Delays between command use are available for the first twenty entries in the list only.");
                sw.WriteLine("Run a permission check on the player using the command by setting it via the xml file to true or false. Users must be the right permission level in the serveradmin.xml");
                sw.WriteLine("Responses in chat can include whisper or global with a message. Whisper will send it to the player that triggers the command, while global will send the message");
                sw.WriteLine("to the entire server.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Damage_Detector\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Entity_Damage_Limit");
                sw.WriteLine("Set a numeric value for Block_Damage_Limit");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Watches for damage done to players and blocks.");
                sw.WriteLine("If the damage is too high, they will be banned. Set the max damage a person can commit.");
                sw.WriteLine("Admins will be skipped if they are the right level.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Day7\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /day and /day7. Using these will respond with the days left until a horde night as well as the current server FPS, count of mobs, animals,");
                sw.WriteLine("minibikes, and supply crates spawned in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Death_Spot\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("After a player dies, they have two minutes to type /died and be brought back to their death position.");
                sw.WriteLine("Delay_Between_Uses controls the time a player must wait before being able to use the command again.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Discord_Bot\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value for Webhook");
                sw.WriteLine();
                sw.WriteLine("Enables communications through Discordian discord bot.");
                sw.WriteLine("Requires Web_API be enabled.");
                sw.WriteLine("Webhook must match the webhook token from Discord. Instructions are provided with the bot.");
                sw.WriteLine("The bot is downloaded separately on Github.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Dupe_Log\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("If a player adds a duplicate item or stack into their inventory, it will be logged for review.");
                sw.WriteLine("This does not guarantee they have duped anything as the tool is not streaming data from the player live.");
                sw.WriteLine("Example: Player buys 5 stacks of concrete blocks from a trader or takes them out of their chest.");
                sw.WriteLine("This will show up in the log because they all appeared together.");
                sw.WriteLine("Creates a file named DuplicateItems.xml. Items in this list will not be logged when found in player's inventory.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Entity_Cleanup\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Blocks");
                sw.WriteLine("Set True or False for Falling_Tree");
                sw.WriteLine("Set True or False for Entity_Underground");
                sw.WriteLine("Set True or False for Delete_Bicycles");
                sw.WriteLine();
                sw.WriteLine("If any of these are active, they are triggered every 15 seconds.");
                sw.WriteLine("Blocks will automatically clean up falling blocks.");
                sw.WriteLine("Falling_Tree will automatically clean up a falling tree that gets stuck at 0 health and does not disappear.");
                sw.WriteLine("Entity_Underground will automatically send entities to the surface except falling blocks are removed.");
                sw.WriteLine("Delete_Bicycles will automatically remove a bicycle if found in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Entity_Cleanup_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Delete_MiniBikes");
                sw.WriteLine("Set True or False for Delete_MotorBikes");
                sw.WriteLine("Set True or False for Delete_Jeeps");
                sw.WriteLine("Set True or False for Delete_Gyros");
                sw.WriteLine();
                sw.WriteLine("Delete_MiniBikes will automatically remove a minibike if found in the world.");
                sw.WriteLine("Delete_MotorBikes will automatically remove a motor bike if found in the world.");
                sw.WriteLine("Delete_Jeeps will automatically remove a jeep if found in the world.");
                sw.WriteLine("Delete_Gyros will automatically remove a gyro  if found in the world.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Exit_Command\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for All");
                sw.WriteLine("Set True or False for Belt");
                sw.WriteLine("Set True or False for Bag");
                sw.WriteLine("Set True or False for Equipment");
                sw.WriteLine();
                sw.WriteLine("Enabling will require players to type /exit to leave the server or else drop things.");
                sw.WriteLine("All will make players drop equipment, backpack and toolbelt.");
                sw.WriteLine("Belt will make a player drop just their toolbelt.");
                sw.WriteLine("Bag will make a player drop just their backpack.");
                sw.WriteLine("Equipment will make a player drop just their equipment.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Exit_Command_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Exit_Time");
                sw.WriteLine();
                sw.WriteLine("Admin_Level is the permission level where typing /exit will not count down and exit.");
                sw.WriteLine("Admins do not require typing /exit to leave. No penalty is applied to them.");
                sw.WriteLine("Exit time is the time a player must stand still after running the command before exit.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"First_Claim_Block\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /claim to receive a claim block but only once.");
                sw.WriteLine("This is used to help prevent claim block grief with noobs especially on PVP servers.");
                sw.WriteLine("Recommend removing the claim block given to new players by the base game when in use to help prevent lost claims.");
                sw.WriteLine("It will not interfere with the initial item spawn.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Flying_Detector\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Flying_Detector");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Flags");
                sw.WriteLine();
                sw.WriteLine("Automatically detects players flying in the air or using no collision underground.");
                sw.WriteLine("Players are automatically banned and given the reason detected for flying.");
                sw.WriteLine("Detected players are added to the detection log.");
                sw.WriteLine("Admins are skipped if the right level.");
                sw.WriteLine("Flags controls how many times a player can be flagged as flying in a row before considered detected.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"FPS\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /fps to show the fps read out from /day7 command.");
                sw.WriteLine("Set_Target controls the fps target the server will be set to on load up.");
                sw.WriteLine("Set_Target reportedly helps with blocks collapsing.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Friend_Teleport\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Friends can type /friend to see a list of their current online friends and their Id #.");
                sw.WriteLine("/friend # will send a request to teleport to the friend with that Id.");
                sw.WriteLine("The other player will receive the request and can type /accept to verify the request.");
                sw.WriteLine("A request will only last for one minute before a player must make a new request.");
                sw.WriteLine("Command cost controls how much the command will take from the wallet to use the command.");
                sw.WriteLine("Player_Check controls whether the player can be close to another player before using this command.");
                sw.WriteLine("Zombie_Check controls whether the player can be close to a zombie and targeted by them before using this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Gimme\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Gimme.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Players can type /gimme to initiate a free item from the gimme list.");
                sw.WriteLine("The gimme.xml contains a list of all the items a player can receive from using /gimme.");
                sw.WriteLine("A delay can be set with Delay_Between_Uses so players must wait that period of time before using /gimme again.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Player_Check controls whether the player can be close to another player before using this command.");
                sw.WriteLine("Zombie_Check controls whether the player can be close to a zombie and targeted by them before using this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Godmode_Detector\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Starts an automatic check for players using god mode.");
                sw.WriteLine("Set the admin level required to use god mode.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hardcore\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Optional");
                sw.WriteLine("Set a numeric value for Max_Deaths");
                sw.WriteLine("Set a numeric value for Max_Extra_Lives");
                sw.WriteLine("Set a numeric value for Life_Price");
                sw.WriteLine();
                sw.WriteLine("Be careful enabling this feature.");
                sw.WriteLine("Players have a limited amount of lives. If they run out, their stats are recorded and they are kicked, then their player profile is deleted.");
                sw.WriteLine("Setting optional allows players to type /hardcore on to enable the mode at any point while playing but this can not be reversed.");
                sw.WriteLine("When a player is kicked, they are given their stats and score.");
                sw.WriteLine("When the player joins again, they can check their last stats/score or check the top 3 playtime and top 3 scores on the server.");
                sw.WriteLine("Set Max_Extra_Lives above 0 to allow players to buy lives and how many.");
                sw.WriteLine("Set the Life_Price to purchase a life. The price is multiplied by the amount of lives they have bought.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"High_Ping_Kicker\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Ping");
                sw.WriteLine("Set a numeric value for Flags");
                sw.WriteLine();
                sw.WriteLine("Players who have too high of a ping will be kicked from the server automatically.");
                sw.WriteLine("Max_Ping is the limit a player can ping at before being flagged for kick.");
                sw.WriteLine("Flags control the amount of times in a row a player must fail the ping check before the auto kick initiates.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Homes\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Homes");
                sw.WriteLine("Set a numeric value for Reserved_Max_Homes");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat commands /sethome 'name', /home save 'name', /home, /fhome 'name' and /home del 'name'.");
                sw.WriteLine("/sethome 'name' and /home save 'name' will save the player's current location as the name they specify.");
                sw.WriteLine("/home lists their saved homes.");
                sw.WriteLine("/home 'name' will teleport the player to the specified location.");
                sw.WriteLine("/fhome 'name' will teleport the player and send an invitation to nearby friends to teleport with them.");
                sw.WriteLine("/home del 'name' will delete the specified home location.");
                sw.WriteLine("Delay_Between_Uses controls the delay before a player can use /home and /fhome. This is set in minutes.");
                sw.WriteLine("Command_Cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Homes_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Hordes\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically starts a horde every 20 minutes if player count is over 5 and zombie count is less than 30.");
                sw.WriteLine("This will not trigger during a bloodmoon.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Info_Ticker\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Messages");
                sw.WriteLine("Set True or False for Random");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InfoTicker.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Each entry in InfoTicker.xml is a message that will disply in game.");
                sw.WriteLine("Delay_Between_Messages controls the time before the next message is displayed.");
                sw.WriteLine("Setting Random to true will show the messages in a random order until all have been displayed. The list will repeat again but in a new random order.");
                sw.WriteLine("Leaving Random to false will display each message in order of the list until all have been displayed. The list will repeat.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Items\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Ban");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set True or False for Check_Storage");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a InvalidItems.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Each entry in InvalidItems.xml is checked against each players inventory.");
                sw.WriteLine("If any items in a player's inventory match the invalid items list, a message will show in the server alerting everyone. The player is also warned.");
                sw.WriteLine("If Ban is set to true it will ban the player instead of kicking them for their illegal items.");
                sw.WriteLine("Setting a Admin_Level will ignore all admins and mods based on the ServerAdmin.xml level they are set to.");
                sw.WriteLine("Setting Admin_Level to 5 will ignore all admins and mods level 0-5 from the serveradmin.xml permission list.");
                sw.WriteLine("Check_Storage will check inside secure chests for invalid items and remove them every 5 minutes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Invalid_Item_Stack\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Automatically checks players inventory for invalid stack sizes. The player will receive a message telling them they have an invalid stack and a log will be made to the output_log.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Jail\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Jail_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Jail_Position");
                sw.WriteLine("Set True or False for Jail_Shock");
                sw.WriteLine();
                sw.WriteLine("Enables the jail system for naughty players. This must be enabled to utilize other tools that send a player to jail.");
                sw.WriteLine("Jail_Size controls how far a player can stray from the jail before it teleports them back to the Jail_Position.");
                sw.WriteLine("Jail_Position controls where a jailed player is sent to. This is the x, y, z position.");
                sw.WriteLine("Jail shock will apply the shock buff to them if they try to leave the prison area.");
                sw.WriteLine("If you send a player to jail via chat commands, are sent to jail for 60 minutes. Players sent via console can be adjusted to suit your needs.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kick_Vote\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Players_Online");
                sw.WriteLine("Set True or False for Votes_Needed");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to kick a player from the game.");
                sw.WriteLine("Can only start a vote if 10 or more players and 8 must vote yes.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Kill_Notice\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_Level");
                sw.WriteLine();
                sw.WriteLine("If a player kills another player, a chat notice will show it and the item used to kill them.");
                sw.WriteLine("Show_Level controls if it shows the player levels.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lobby\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Lobby_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Lobby_Position");
                sw.WriteLine();
                sw.WriteLine("Typing /lobby will send a player to the lobby if the position is set.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using /lobby again.");
                sw.WriteLine("If return is enabled, players are alert upon using /lobby that they can type /return to be sent back to the location they came from.");
                sw.WriteLine("They must be within range of the lobby position based on the Lobby_Size");
                sw.WriteLine("Lobby_Position controls where they will be teleport to when using /lobby.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lobby_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Reserved_Only");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for PvE");
                sw.WriteLine();
                sw.WriteLine("Reserved only locks the lobby commands to only reserved players");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine("Set PvE to true so they can not damage each other while inside the lobby.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Location\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /loc to show their x, y, z coordinates in chat.");
                sw.WriteLine("This is adjusted to match the in game map. The true world location is different in height value. Use console command lp to check true locations.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Login_Notice\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a file named LoginNotice.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Add players steam id under the id and whatever message of your choice for message.");
                sw.WriteLine("If the player matching the listed id enters the game, the message will be displayed to all players.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Logs\" />");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Controls how old a log file can be before it is automatically deleted from the logs folder.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Lottery\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Bonus");
                sw.WriteLine();
                sw.WriteLine("Players can start a new lottery by typing /lottery #. They can check the current lotto with /lottery.");
                sw.WriteLine("To enter a lottery, players must match what the first player opened the lottery value as.");
                sw.WriteLine("When an hour has passed or ten players have entered the lottery, it will draw the winner.");
                sw.WriteLine("If the lottery is full, the winner also gets the Bonus.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Market\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Market_Size");
                sw.WriteLine("Set a numeric value set of x, y, z position for Market_Position");
                sw.WriteLine();
                sw.WriteLine("Typing /market will send a player to the market if the position is set.");
                sw.WriteLine("Delay_Between_Uses controls how long a player must wait before using /market again.");
                sw.WriteLine("If return is enabled, players are alert upon using /market that they can type /return to be sent back to the location they came from.");
                sw.WriteLine("They must be within range of the market position based on the Market_Size");
                sw.WriteLine("Market_Position controls where they will be teleport to when using /market.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Market_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Reserved_Only");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for PvE");
                sw.WriteLine();
                sw.WriteLine("Reserved only locks the market commands to only donor/reserved players");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine("Set PvE to true so they can not damage each other while inside the market.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Message_Color\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a color using a html value in brackets for Color");
                sw.WriteLine();
                sw.WriteLine("General chat message color can be controlled with this.");
                sw.WriteLine("The color must be entered as an HTML color. Example:[FF0000]");
                sw.WriteLine("This does not effect their name or add a prefix to it. It only changes the color of the message.");
                sw.WriteLine("Command responses are a different color and controled by a different option.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Motd\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Show_On_Respawn");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Motd.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Message of the day or Motd entries will show to the player upon joining the server.");
                sw.WriteLine("Each entry in the Motd.xml will show as a separate message in game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Mute\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the in game mute tool to shut up players that talk too much.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Mute_Vote\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Players_Online");
                sw.WriteLine("Set a numeric value for Votes_Needed");
                sw.WriteLine();
                sw.WriteLine("Allows players to start a vote to mute a player in game from chat for 60 minutes.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Player\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Create an entry message for Entry_Message");
                sw.WriteLine();
                sw.WriteLine("New players that join your server will trigger this message to show for everyone.");
                sw.WriteLine("It can contain {PlayerName} if you want their name to display.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Player_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Block_During_Bloodmoon");
                sw.WriteLine();
                sw.WriteLine("Block_During_Bloodmoon controls if a new player can join during the bloodmoon.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Player_Protection\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Level");
                sw.WriteLine();
                sw.WriteLine("This will block all PvP damages until the player reaches the desired level.");
                sw.WriteLine("Sets the level required for PvP damages to occur.");
                sw.WriteLine("Players taking zombie and animal damage will receive a small heal until they reach the desired level.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"New_Spawn_Tele\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for New_Spawn_Tele_Position");
                sw.WriteLine("Set True or False for Return");
                sw.WriteLine();
                sw.WriteLine("Teleports a new player upon joining to the New_Spawn_Tele_Position.");
                sw.WriteLine("Set New_Spawn_Tele_Position to control where a new player will spawn to.");
                sw.WriteLine("New_Spawn_Tele_Position is an x, y, z position.");
                sw.WriteLine("Enabling return will alert players upon teleport that they can type /ready to go back to their first spawn point.");
                sw.WriteLine("Players must be with 50 blocks of the new tele spawn to use /ready.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Night_Alert\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically show the hours left until night time.");
                sw.WriteLine("Use Delay to control how often it shows.");
                sw.WriteLine("Does not display during night time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Normal_Player_Color_Prefix\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value of your choice in paranthesis for Prefix");
                sw.WriteLine("Set a color using a html value in brackets for Color");
                sw.WriteLine();
                sw.WriteLine("Enabling makes all standard players chat message show with a prefix and color.");
                sw.WriteLine("Prefix controls the prefix for the message.");
                sw.WriteLine("Color controls the color of the chat message.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_List\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling lets players type /list to see all the current online player names and entity id.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Logs\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Interval");
                sw.WriteLine();
                sw.WriteLine("Starts a log that will keep track of multi stats and the player inventory.");
                sw.WriteLine("Setting the Interval will control how often these checks and logs and written to the file.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Player_Stat_Check\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Max_Speed");
                sw.WriteLine("Set True or False for Ban_Enabled");
                sw.WriteLine();
                sw.WriteLine("Automatically checks if a player has an illegal value for their level, player height, run speed, available skill points, max health, max stamina or max jump height.");
                sw.WriteLine("Detected players who fail any of the checks will have a log created.");
                sw.WriteLine("Max_Speed controls how fast a player can be detected traveling before being logged, kicked and banned depending on options set.");
                sw.WriteLine("Setting Kick_Enabled to true will kick the detected player.");
                sw.WriteLine("Setting Ban_Enabled to true will ban the detected player.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"POI_Protection\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Bed");
                sw.WriteLine("Set True or False for Claim");
                sw.WriteLine("Optional: Set integer(numeric) value for Offset");
                sw.WriteLine();
                sw.WriteLine("Enable protection from placement of beds and claims on a POI(Place of interest).");
                sw.WriteLine("Set bed, claim or both to true to stop that specific block type from being placed.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Poll\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the polling tool for admins to start polls for players to vote on.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Prayer\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Players can type /pray to receive a buff from a custom list called Prayer.xml.");
                sw.WriteLine("Set the time delay before players can use this command again. Time is in minutes.");
                sw.WriteLine("Set the cost to use this command with Command_Cost");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Prefab_Reset\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Causes all prefab chunks to be reset on server start if they have block updates");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Private_Message\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can send a private message to each other by using their id or name in chat.");
                sw.WriteLine("Example: /pm 171 Hey buddy, lets meet up.");
                sw.WriteLine("In response, a player can return a message to the last private sender by using /rm.");
                sw.WriteLine("Example: /rm Sounds good. Lets meet by the town in the morning.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Protected_Spaces\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create an xml file named ProtectedSpaces.xml.");
                sw.WriteLine("Use the console commands while in game to add protection to an area.");
                sw.WriteLine("Use the console commands while in game to remove protection to an area.");
                sw.WriteLine("Use two opposing corner points to designate the protected space. This will form a square or rectangle depending on the locations chosen");
                sw.WriteLine("Protected spaces do not allow for any damage to the blocks nor for anyone to build inside of it including admins.");
                sw.WriteLine("You can list the protected spaces in console.");
                sw.WriteLine("Do not add or remove protection through the xml nor from outside of the game. You must be loaded in game and in the area for it to function.");
                sw.WriteLine("You can disable the protection of a space while keeping it on the list to make it easy to reactivate.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"PvE_Violations\" />");
                sw.WriteLine();
                sw.WriteLine("Set a numeric value for Jail");
                sw.WriteLine("Set a numeric value for Kill");
                sw.WriteLine("Set a numeric value for Kick");
                sw.WriteLine("Set a numeric value for Ban");
                sw.WriteLine();
                sw.WriteLine("Players that violate PvE zones will be hit with a strike. If they get too many of them, it will apply a penalty.");
                sw.WriteLine("Set how many strikes a player can have before applying the penalties.");
                sw.WriteLine("Setting 0 will not apply the penalty.");
                sw.WriteLine("Jail will send the player to the designated jail space provided it is setup.");
                sw.WriteLine("Kill will kill the player.");
                sw.WriteLine("Kick will kick the player from the server.");
                sw.WriteLine("Ban will ban the player fro mthe server.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Real_World_Time\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay");
                sw.WriteLine("Set a string value for Time_Zone");
                sw.WriteLine("Set a numeric value for Adjustment");
                sw.WriteLine();
                sw.WriteLine("Enabling will show the real world time periodically based on the delay.");
                sw.WriteLine("Recommend changing the Time_Zone to match the time zone of the server host location. This will not adjust for the difference");
                sw.WriteLine("Use adjustment to match the time you prefer as some host are not located in your home country.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Report\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow a player to type /report and their message.");
                sw.WriteLine("The message will be logged in a file called Report.xml under the Reports folder.");
                sw.WriteLine("Admins online at the time of sending, will be sent the message as well.");
                sw.WriteLine("Delay_Between_Uses controls how often a report can be made by a player in minutes.");
                sw.WriteLine("Admin_Level is the level an admin or mod must be to receive the message. Setting 4 would make 0-4 receive it.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Reserved_Slots\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Session_Time");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Admin_Slots");
                sw.WriteLine("Set True or False for Reduced_Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a ReservedSlots.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("Turns on an automatic reservation system. When the server is full, it will kick 1 player that is not listed in the ReservedSlots.xml or an admin");
                sw.WriteLine("The auto kick chooses based on the player's overall play session time. Setting zero runs it immediately.");
                sw.WriteLine("If a player is not reserved but also has not played longer than the Session_Time, they will not be kicked, except when set to zero.");
                sw.WriteLine("Admins lower or equal to tier Admin_Level are immune to the kick system. Default is 0. Setting 2 covers 0-2.");
                sw.WriteLine("Admins_Slots keeps one extra slot open for admins to rotate in to the server. A 30 player server will start kicking at 28 players.");
                sw.WriteLine("If Reduced_Delay is set to true, valid players on the list will have a reduced delay after using a relevant chat commands.");
                sw.WriteLine("Players can type /reserved which will respond with the players reservation expiration time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Restart_Vote\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Players_Online");
                sw.WriteLine("Set True or False for Votes_Needed");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Allows players to vote for a server restart. Initiates stopserver 1 if successful.");
                sw.WriteLine("Players_Online is the amount needed to start a vote.");
                sw.WriteLine("Votes_Needed is the amount of players that must vote yes.");
                sw.WriteLine("If an admin of tier Admin_Level is online during a call to vote, they will be alerted and no vote will begin.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Scout_Player\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Players can type /scout to try and locate near by players. It gives no location data but will tell them if a non friend is found with 200 blocks.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("< Tool Name =\"Shop\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Inside_Market");
                sw.WriteLine("Set True or False for Inside_Traders");
                sw.WriteLine();
                sw.WriteLine("While enabled, players can use chat command /shop while anywhere on the map.");
                sw.WriteLine("If you set Inside_Market or Inside_Traders to true, they must be inside one of these to use /shop and /buy.");
                sw.WriteLine("Players can buy an item multiple times from the shop with /buy # #. The second number controls how many times they want to buy it.");
                sw.WriteLine("Admins can customize the Shop.xml however they prefer with any items or blocks from the game.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Shutdown\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Countdown_Timer");
                sw.WriteLine("Set a numeric value for Time_Before_Shutdown");
                sw.WriteLine("Set True or False for Alert_On_Login");
                sw.WriteLine("Set a numeric value for Alert_Count");
                sw.WriteLine();
                sw.WriteLine("Automatically begins the shutdown process for the server after the Time_Before_Shutdown runs out.");
                sw.WriteLine("Begins a warning of the coming shutdown with a timer based on the Countdown_Timer after the Time_Before_Shutdown time has run out.");
                sw.WriteLine("Saves the world at one minute remaining of the count down and gives the players a warning not to exchange items or build during the final minute.");
                sw.WriteLine("If the server is set as a service on the host hardware, it will automatically restart. ServerTools can not automatically restart a server.");
                sw.WriteLine("Alert on login announces the time remaining before the next scheduled shutdown upon entering in to the server.");
                sw.WriteLine("Alert_Count controls how many times the alert messages post in chat on each event to help players see it.");
                sw.WriteLine("Bloodmoon nights are automatically detected and the shutdown will pause for that time period. When the bloodmoon ends the shutdown process will commence.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Sleeper_Respawn\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Sleeper spawn points will be reset on server restart.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Starting_Items\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a StartingItems.xml in your main installation folder inside the ServerTools folder");
                sw.WriteLine("All items listed in StartingItems.xml will be given to a new player when they first join the server.");
                sw.WriteLine("Use WalletCoin, walletCoin or walletcoin to give a player currency to their wallet.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Stuck\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine();
                sw.WriteLine("Players can type /stuck to send themself to the world surface.");
                sw.WriteLine("Can not be used inside other player's claim space.");
                sw.WriteLine("Set the Delay_Between_Uses to control how long a player must wait before stuck will work for them again.");
                sw.WriteLine("This is likely not a viable tool if the Flight tool is operating because they will likely be detected flying if stuck in a wall.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Suicide\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Enables the chat commands /killme, /suicide, /wrist and /hang so players can kill themselves.");
                sw.WriteLine("Set the Delay_Between_Uses to control how long a player must wait before suicide will work for them again.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Tracking\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enables the tracking logger to create a database log of player positions.");
                sw.WriteLine("Use console commands to see the players and their positions from a specified location and time.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Travel\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a TravelLocations.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("All locations listed in the TravelLocations.xml will allow a player to type /travel while inside one and teleport to the corresponding destination.");
                sw.WriteLine("Inside the TravelLocations.xml, destination is where the player will teleport to.");
                sw.WriteLine("The name will be the name of the travel zone, Corner1 is first corner of the zone, Corner2 is the opposite corner of the zone.");
                sw.WriteLine("Corner1, corner2 and destination are represented by x, y, z coordinates.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine("Set Zombie_Check to true so they must be far enough from zombies to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Vehicle_Teleport\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Bike");
                sw.WriteLine("Set True or False for Mini_Bike");
                sw.WriteLine("Set True or False for Motor_Bike");
                sw.WriteLine("Set True or False for Jeep");
                sw.WriteLine("Set True or False for Gyro");
                sw.WriteLine();
                sw.WriteLine("Players can type the corresponding chat command while inside their own claim space and in their vehicle to set it for future teleport.");
                sw.WriteLine("When not in the vehicle, typing the chat commands will try to find the set vehcile within 50 blocks of the player and return it to them.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Vehicle_Teleport_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Inside_Claim");
                sw.WriteLine("Set a numeric value for Distance");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set a numeric values for Command_Cost");
                sw.WriteLine();
                sw.WriteLine("Inside_Claim controls whether they must be inside their claim space to set the vehicle for future teleport.");
                sw.WriteLine("Distance controls how far a player can be from their vehicle to use the command. Distance is in blocks");
                sw.WriteLine("Delay_Between_Uses controls how often they can use the command. Delay is in minutes.");
                sw.WriteLine("Command cost controls how much must be in a player's wallet to use the command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Voting\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set your server https address value for Your_Voting_Site. This will match your registered server at https://7daystodie-servers.com");
                sw.WriteLine("Set your server API_Key value found at https://7daystodie-servers.com for API_Key");
                sw.WriteLine("Set a numeric value for Delay_Between_Rewards");
                sw.WriteLine("Set a numeric value for Reward_Count");
                sw.WriteLine("Set True or False for Reward_Entity");
                sw.WriteLine("Set a numeric value for Entity_Id");
                sw.WriteLine();
                sw.WriteLine("Enabling allows players to use chat command /reward after voting at https://7daystodie-servers.com for your server.");
                sw.WriteLine("If a player has not voted, they will be told to vote at YourVotingSite value.");
                sw.WriteLine("The APIKey is attached to your registered server listed in your server details at https://7daystodie-servers.com");
                sw.WriteLine("DelayBetweenRewards controls how many hours a player must wait before being able to vote and receive a reward for voting.");
                sw.WriteLine("Reward count controls how many items a player will receive from the VoteRewards.xml each time they use /reward.");
                sw.WriteLine("Reward count does not control how many of a particular item you will receive, it controls how many entries from the VoteRewards.xml a player will receive.");
                sw.WriteLine("Setting Reward_Entity to true will not use the VoteReward.xml. Instead it will spawn a single entity based on the Entity_Id.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Voting_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Reward_Entity");
                sw.WriteLine("Set a numeric value for Entity_Id");
                sw.WriteLine("Set a numeric value for Weekly_Votes");
                sw.WriteLine();
                sw.WriteLine("Set Reward_Entity to true so that players receive an entity spawned for their reward");
                sw.WriteLine("Entity_Id controls which entity is spawned as a reward.");
                sw.WriteLine("Weekly_Votes controls how many times a player must vote in 7 days to receive an extra vote reward.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("< Tool Name =\"Wallet\" />");
                sw.WriteLine();
                sw.WriteLine("Set a value of your choice for Coin_Name");
                sw.WriteLine("Set True or False for PvP");
                sw.WriteLine("Set a numeric value for Zombie_Kill_Value");
                sw.WriteLine("Set a numeric value for Player_Kill_Value");
                sw.WriteLine("Set a numeric value for Death_Penalty_Value");
                sw.WriteLine();
                sw.WriteLine("Coin_Name is what you would like the server currency in your wallet to be called.");
                sw.WriteLine("The wallet is calculated as follows: PvE = zombie kills + deaths + spent coins.");
                sw.WriteLine("The wallet is calculated as follows: PvP = zombie kills + player kills + deaths + spent coins.");
                sw.WriteLine("Set any values you want for zombie/player kills and deaths.");
                sw.WriteLine("Players will lose what they have in their wallet if Lose_On_Death is set to true.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Wallet_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Lose_On_Death");
                sw.WriteLine("Set True or False for Bank_Transfers");
                sw.WriteLine("Set a numeric value for Session_Bonus");
                sw.WriteLine();
                sw.WriteLine("Lose_On_Death controls if a player loses everything from their wallet upon dying.");
                sw.WriteLine("Bank_Transfers lets players send and receive wallet funds to the bank.");
                sw.WriteLine("While wallet is enabled, if a player leaves the game and has played over an hour, they will receive the session bonus to their wallet.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Watchlist\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine("Set a numeric value for Alert_Delay");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Watchlist.xml in your main installation folder in a ServerTools folder");
                sw.WriteLine("All user Id that matches those listed in the watchlist will trigger an ingame alert to all online admins.");
                sw.WriteLine("Admin_Level controls what level an admin must be to receive the alerts.");
                sw.WriteLine("Alert_Delay controls how many minutes between alerts.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Waypoints\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Max_Waypoints");
                sw.WriteLine("Set a numeric value for Reserved_Max_Waypoints");
                sw.WriteLine("Set a numeric value for Command_Cost");
                sw.WriteLine("Set a numeric value for Delay_Between_Uses");
                sw.WriteLine("Set True or False for Player_Check");
                sw.WriteLine();
                sw.WriteLine("Allows players to save a waypoint for teleport.");
                sw.WriteLine("Players can list their own waypoints, add and delete them freely.");
                sw.WriteLine("Command_Cost is how much it costs to use a waypoint out of their wallet.");
                sw.WriteLine("Set the delay for players to use this command again. Time is in minutes.");
                sw.WriteLine("Set Player_Check to true so they must be far enough from players to use this command.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Waypoints_Extended\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Zombie_Check");
                sw.WriteLine("Set True or False for Vehicle");
                sw.WriteLine();
                sw.WriteLine("Set Zombie_Check to true so they must be far enough and not targeted from zombies to use this command.");
                sw.WriteLine("Players type /way to list existing. /way 'name' to use that waypoint. /waysave 'name' to save where they are standing with that name. /waydel 'name' to remove the existing point.");
                sw.WriteLine("Vehicle controls whether players can be in a vehicle and will stop them from teleporting while set to true.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Weather_Vote\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Players_Online");
                sw.WriteLine("Set a numeric value for Votes_Needed");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow players to start a vote to change the weather by typing /weathervote in chat.");
                sw.WriteLine("All players will be alerted to an open weather vote where they can type /clear, /rain, or /snow.");
                sw.WriteLine("The winning weather type will be announced after 60 seconds and set server wide.");
                sw.WriteLine("Players_Online controls how many must be online to open a new vote.");
                sw.WriteLine("Votes_Needed controls how many votes must be in support of the weather change.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Web_API\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a value of your choice for Port");
                sw.WriteLine();
                sw.WriteLine("Enabling will allow the Web Panel and Discord bot to communicate through the web api.");
                sw.WriteLine("Requires port forwarding. The web api requires an open port to function.");
                sw.WriteLine("Port will control which port the API attempts to open on.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Web_Panel\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine();
                sw.WriteLine("Enabling will start the web panel.");
                sw.WriteLine("The web panel requires Web_API be enabled.");
                sw.WriteLine("Set the port you wish the panel to utilize under the Web_API tool. It will be reported in the output log");
                sw.WriteLine("Access via browser at http://IP:Port/st.html");
                sw.WriteLine("Example: http://123.123.123.123:8084/st.html");
                sw.WriteLine("Allow access to new clients by adding them via console command. A new password will be generated for them.");
                sw.WriteLine("Clients can change their password upon successful sign in.");
                sw.WriteLine("Clients can monitor a player list with kick, ban, mute, jail and reward options available.");
                sw.WriteLine("Clients can alter the ServerToolsConfig.xml");
                sw.WriteLine("Clients can run console commands");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"World_Radius\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set a numeric value for Normal_Player");
                sw.WriteLine("Set a numeric value for Reserved");
                sw.WriteLine("Set a numeric value for Admin_Level");
                sw.WriteLine();
                sw.WriteLine("Enabling will automatically check player locations vs specified block ranges from center.");
                sw.WriteLine("Normal_Player is the amount of blocks a non reserved player can travel from center before being teleport backwards away from the edge.");
                sw.WriteLine("Reserved is the amount of blocks a reserved player can travel from center before being teleport backwards away from the edge.");
                sw.WriteLine("Admin_Level controls the admin level required for the tool to skip them and allow travel outside of the block ranges.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("<Tool Name=\"Zones\" />");
                sw.WriteLine();
                sw.WriteLine("Set True or False for Enable");
                sw.WriteLine("Set True or False for Zone_Message");
                sw.WriteLine("Set a numeric value for Reminder_Notice_Delay");
                sw.WriteLine("Set True or False for Set_Home");
                sw.WriteLine();
                sw.WriteLine("Enabling will create a Zones.xml in your main installation folder in a ServerTools folder.");
                sw.WriteLine("Automatically detects players locations to see if they match those listed in Zones.xml.");
                sw.WriteLine("Each zone can set the PvPvE mode which corresponds to the player killing mode.");
                sw.WriteLine("PvPvE: 0 = No Killing, 1 = Kill Allies Only, 2 = Kill Strangers Only, 3 = Kill Everyone");
                sw.WriteLine("If Zone_Message is false, players will not receive a message upon entering or exiting a protected zone.");
                sw.WriteLine("EntryCommand and ExitCommand will run console commands upon entering and exiting the zone.");
                sw.WriteLine("Multiple console commands can be run using ^ to separate them.");
                sw.WriteLine("Reminder notice is the message the player receives if they stay in the same zone long enough.");
                sw.WriteLine("Remove zombies from zones by setting No_Zombie to true.");
                sw.WriteLine("Set_Home controls whether players can set a home inside of zones.");
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine();
                sw.WriteLine("Console commands");
                sw.WriteLine();
                sw.WriteLine("Type help to get a list of available console commands.");
                sw.WriteLine("Type help <command> to get more detailed information about a specific command.");
                sw.WriteLine();
                sw.WriteLine("Chat commands");
                sw.WriteLine();
                sw.WriteLine("Type /commands in chat to get a list of available chat commands.");
                sw.WriteLine();
                sw.Flush();
                sw.Close();
            }
        }
    }
}
